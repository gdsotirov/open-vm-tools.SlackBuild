#!/bin/sh
#
# Slackware build script for Open Virtual Machine Tools (open-vm-tools)
# Copyright (C) 2020-2022 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=open-vm-tools
VERSION=11.3.5
VER_BLD=18557794
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir --parents $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}-${VER_BLD}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir --parents $PKG

# Extract the source
cd $TMP
tar --extract --verbose --file=$CWD/${NAME}-${VERSION}-${VER_BLD}.tar.gz || exit 3
cd $SRC
fix_source

# Apply patch
if [ -e $CWD/${NAME}-${VERSION}-${VER_BLD}.diff ]; then
  patch -p1 -b -z.orig < $CWD/${NAME}-${VERSION}-${VER_BLD}.diff || exit 4
fi

# Configure
# without ICU (see https://github.com/vmware/open-vm-tools/issues/522)
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure --build=${ARCH}-slackware-linux \
            --host=${ARCH}-slackware-linux \
            --prefix=/usr \
            --libdir=/usr/lib$LIBDIRSUFFIX \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --docdir=/usr/doc/${NAME}-${VERSION}_${VER_BLD} \
            --disable-dependency-tracking \
            --disable-silent-rules \
            --enable-shared=yes \
            --enable-static=no \
            --enable-libappmonitor \
            --enable-servicediscovery \
            --without-xerces \
            --without-icu \
            || exit 5

# Build & install
make -j4 || exit 6
make DESTDIR=$PKG install || exit 7

# Manually install init script
install --mode 755 --directory $PKG/etc/rc.d
install --mode 644 --preserve-timestamps \
        $CWD/rc.vmtoolsd $PKG/etc/rc.d/rc.vmtoolsd.new
# Copy configuration file for swapping
install --mode 644 --preserve-timestamps \
        $PKG/etc/vmware-tools/tools.conf.example \
        $PKG/etc/vmware-tools/tools.conf.new

# Prepare the package
bin_perms $PKG
sbin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
create_docs $PKG ${NAME}-${VERSION}_${VER_BLD}

install --mode 755 --directory $PKG/install
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh      $PKG/install/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc     $PKG/install/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required $PKG/install/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests $PKG/install/slack-suggests

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}_$VER_BLD
install --mode 755 --directory $SBDIR
install --mode 644 --preserve-timestamps \
        $CWD/COPYING            $SBDIR/COPYING
install --mode 644 --preserve-timestamps \
        $CWD/README             $SBDIR/README
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh          $SBDIR/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/rc.vmtoolsd        $SBDIR/rc.vmtoolsd
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc         $SBDIR/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required     $SBDIR/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests     $SBDIR/slack-suggests
if [ -e $CWD/${NAME}-${VERSION}-${VER_BLD}.diff ]; then
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}-${VERSION}-${VER_BLD}.diff \
        $SBDIR/${NAME}-${VERSION}-${VER_BLD}.diff
fi
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Assemble the package in the package dir
cd $PKG
PKGNAME=${NAME}-${VERSION}_${VER_BLD}-${ARCH}-${BUILD}${MYIN}
makepkg --chown n --linkadd y $PKG_DIR/${PKGNAME}.txz
md5sum $PKG_DIR/${PKGNAME}.txz > $PKG_DIR/${PKGNAME}.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt

# Clean Up
if [ "$1" == "--cleanup" ]; then
  rm --recursive $SRC
  rm --recursive $PKG
fi


